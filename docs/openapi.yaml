openapi: 3.0.3
info:
  title: partner API
  description: |-
    This is a super simple API for managing partners
  contact:
    email: devs@agile-learning.institute
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11

paths:
  /api/partner/:
    post:
      summary: Add a new partner
      operationId: addPartner
      requestBody:
        description: Partner details to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partner'
              required: true
      responses:
        '200':
          description: Partner added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
        '405':
          description: Bad request due to invalid input
    get:
      summary: Get a list of partner's names and ids
      operationId: getNames
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Names'
        '404': 
          description: No partners found
        '405':
          description: Validation exception

  /api/partner/{partnerId}/:
    get:
      summary: Get an existing partner by ID
      operationId: getPartner
      parameters:
        - name: partnerId
          in: path
          description: The ID of the partner to retrieve
          required: true
          schema:
            type: string
            format: GUID
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
        '404':
          description: Partner not found
        '405':
          description: Validation exception '

    patch:
      summary: Update a partner by ID
      parameters:
        - name: partnerId
          in: path
          description: The ID of the partner to update
          required: true
          schema:
            type: string
            format: GUID
      requestBody:
        description: updated partner details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partner'
        required: true
      responses:
        '200':
          description: Partner updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
        '404':
          description: Partner not found
        '405':
          description: Validation exception

  /api/partner/{partnerId}/contacts/{contactId}/:
    post:
      summary: Add a new contact to a partner
      parameters:
        - name: partnerId
          in: path
          description: The ID of the partner to add the contact to
          required: true
          schema:
            type: string
            format: GUID
        - name: contactId
          in: path
          description: The ID of the person to add to the contact list
          required: true
          schema:
            type: string
            format: GUID
      responses:
        '200':
          description: Contact added successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Partner"
        '400':
          description: Bad request due to invalid input
        '404':
          description: Partner not found
    delete:
      summary: Delete a contact from a partner
      parameters:
        - name: partnerId
          in: path
          description: The ID of the partner to delete the contact from
          required: true
          schema:
            type: string
            format: GUID
        - name: contactId
          in: path
          description: The ID of the contact to delete
          required: true
          schema:
            type: string
            format: GUID
      responses:
        '204':
          description: Contact deleted successfully
        '404':
          description: Partner or contact not found
  /api/people/:
    get:
      summary: Get a list of people
      operationId: getPeople
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/People'
        '404': 
          description: No partners found
        '405':
          description: Validation exception
  /api/enums/:
    get:
      summary: Get Enumerator Values
      operationId: getEnums
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enums'          
  /api/config/:
    get:
      summary: Get API Configuration Information
      operationId: getConfig
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'    

  /api/health/:
    get:
      summary: Promethius Healthcheck endpoint
      operationId: getHealth
      responses:
        '200':
          description: Successful operation
    

components:
  schemas:
    Partner:
      type: object
      required:
        - name
      properties:
        _id:
          type: string
          description: The unique identifier for a partner
        name:
          type: string
          description: VERSION is the key that identifies a document as a Schema Version document, otherwise it's just the name
          maxLength: 32
        description:
          type: string
          description: Description of the partner
          maxLength: 256
        status:
          type: string
          description: The status of this partnership
          enum:
            - Active
            - Inactive
            - Archived
        url:
          type: string
          description: Partner Company website
          maxLength: 256
          pattern: '^(https?|ftp)://[^\\s/$.?#].[^\\s]*$'
        contacts:
          type: array
          description: Array of contacts associated with this partner
          items:
              type: object
              properties:
                _id:
                  type: string
                  description: The unique identifier for a contact within a partner
        lastSaved:
          type: object
          properties:
            fromIp:
              type: string
              description: Http Request remote IP address
            byUser:
              type: string
              description: UUID Of User
            atTime:
              type: string
              description: The date-time when last updated
            correlationId:
              type: string
              description: The logging correlation ID of the update transaction
    People:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
            description: MongoDB _id
          name:
            type: string
            description: Name
    Enums:
      type: object
    Names: 
      type: array
      items:
        type: object
        properties: 
          ID:
            description: MongoDB _id
            type: string
            format: uuid
          name:
            description: Name
            type: string     
    Config:
      type: object
      properties:
        apiVersion:
          type: string
          description: Semantic Version Number
        Stores: 
          type: array
          items:
            type: object
            properties:
              CollectionName: 
                description: Mongodb Collection name
                type: string
              Version:
                description: Schema Version for the collection
                type: string
              Filter:
                description: special Filter applied to collection
                type: string
        ConfigItems:
          type: array
          items:
            type: object
            properties: 
              name:
                description: Conf Item Name (Env Var Name, File Name)
                type: string
              value:
                description: The value for that config item
                type: string
              from:
                description: Where the value was found
                type: string
                enum:
                  - default
                  - environment
                  - file