openapi: 3.0.3
info:
  title: partner API
  description: |-
    This is a super simple API for managing partners
  contact:
    email: devs@agile-learning.institute
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11

paths:
  /api/partner/:
    get:
      summary: Get a list of partner's names and ids
      operationId: getNames
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/names"
        "404":
          description: No partners found
        "405":
          description: Validation exception
    post:
      summary: Add a new partner
      operationId: addpartner
      requestBody:
        description: partner details to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/partner"
              required: true
      responses:
        "200":
          description: partner added successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/partner"
        "405":
          description: Bad request due to invalid input

  /api/partner/{partnerId}/:
    get:
      summary: Get an existing partner by ID
      operationId: getpartnerById
      parameters:
        - name: partnerId
          in: path
          description: The ID of the partner to retrieve
          required: true
          schema:
            type: string
            format: GUID
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/partner"
        "404":
          description: partner not found
        "405":
          description: Validation exception '
    patch:
      summary: Update a partner by ID
      operationId: updatepartner
      parameters:
        - name: partnerId
          in: path
          description: The ID of the partner to update
          required: true
          schema:
            type: string
            format: GUID
      requestBody:
        description: updated partner details
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/partner"
        required: true
      responses:
        "200":
          description: partner updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/partner"
        "404":
          description: partner not found
        "405":
          description: Validation exception

  /api/partner/{partnerId}/contacts/{contactId}/:
    post:
      summary: Add a new contact to a partner
      operationId: addContact
      parameters:
        - name: partnerId
          in: path
          description: The ID of the partner to add the contact to
          required: true
          schema:
            type: string
            format: GUID
        - name: contactId
          in: path
          description: The ID of the person to add to the contact list
          required: true
          schema:
            type: string
            format: GUID
      responses:
        "200":
          description: Contact added successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/partner"
        "400":
          description: Bad request due to invalid input
        "404":
          description: partner not found
    delete:
      summary: Delete a contact from a partner
      operationId: deleteContact
      parameters:
        - name: partnerId
          in: path
          description: The ID of the partner to delete the contact from
          required: true
          schema:
            type: string
            format: GUID
        - name: contactId
          in: path
          description: The ID of the contact to delete
          required: true
          schema:
            type: string
            format: GUID
      responses:
        "204":
          description: Contact deleted successfully
        "404":
          description: partner or contact not found
  /api/people/:
    get:
      summary: Get a list of people whose name constains the search query
      operationId: getPeople
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: The name to search for
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/names"
        "404":
          description: No partners found
        "405":
          description: Validation exception
  /api/config/:
    get:
      summary: Get API Configuration Information
      operationId: getConfig
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/config"

  /api/health/:
    get:
      summary: Promethius Healthcheck endpoint
      operationId: getHealth
      responses:
        "200":
          description: Successful operation

components:
  schemas:
    partner:
      type: object
      required:
        - _id
        - name
      properties:
        _id:
          description: The unique identifier for a partner
          type: string
        name:
          description: Partner name
          pattern: ^[ -~]{0,256}$
          type: string
        description:
          description: Description of the partner
          pattern: ^[ -~]{0,256}$
          type: string
        status:
          description: The status of this partnership
          enum:
            - Active
            - Inactive
            - Archived
          type: string
        url:
          description: Partner Company website
          pattern: >-
            ^(https?:\/\/)([a-zA-Z0-9-]{1,63}\.)+[a-zA-Z-]{2,24}(:[0-9]{1,5})?(\/(([\w\-\.~]|%[a-fA-F0-9]{2}|[!\$&'\(\)\*\+,;=:@])*\/?)*)?
          type: string
        contactDetails:
          description: Array of People associated with this partner
          items:
            type: object
            description: Contact information
            properties:
              firstName: 
                type: string
              lastName:
                type: string
              phone:
                type: string
          type: array
        lastSaved:
          type: object
          description: Change tracking breadcrumb
          properties:
            fromIp:
              description: Http Request remote IP address
              pattern: >-
                ^(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}$
              type: string
            byUser:
              description: UUID Of User
              type: string
            atTime:
              description: The date-time when last updated
              type: string
            correlationId:
              description: The logging correlation ID of the update transaction
              type: string
          additionalProperties: false
    names:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
            description: MongoDB _id
          name:
            type: string
            description: Name
    config:
      type: object
      properties:
        apiVersion:
          type: string
          description: Symantic Version Number
        configItems:
          type: array
          items:
            type: object
            properties:
              name:
                description: Conf Item Name (Env Var Name, File Name)
                type: string
              value:
                description: The value for that config item
                type: string
              from:
                description: Where the value was found
                type: string
                enum:
                  - default
                  - environment
                  - file
        versions:
          type: array
          items:
            type: object
            properties:
              _id:
                description: Collection Version Document ID
                type: string
              collectionName:
                description: Mongodb Collection name
                type: string
              currentVersion:
                description: Schema Version for the collection
                type: string
        enumerators:
          type: object
        mentors:
          description: List of all members with role Mentor
          type: array
          items:
            type: object
            properties:
              ID:
                description: MongoDB _id
                type: string
              name:
                description: Name
                type: string
