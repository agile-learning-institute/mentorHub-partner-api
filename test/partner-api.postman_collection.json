{
	"info": {
		"_postman_id": "8fa9443f-3515-4227-a8f0-403b7c7cf077",
		"name": "partner-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29464697"
	},
	"item": [
		{
			"name": "Get Config",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response body as JSON",
							"",
							"// Test to check if specific properties exist",
							"pm.test(\"Response should have all required properties\", function () {",
							"    const responseBody = pm.response.json();",
							"    pm.expect(responseBody).to.have.property(\"configItems\");",
							"    pm.expect(responseBody.configItems).to.be.an(\"array\");",
							"    pm.expect(responseBody).to.have.property(\"versions\");",
							"    pm.expect(responseBody.versions).to.be.an(\"array\");",
							"    pm.expect(responseBody).to.have.property(\"enumerators\");",
							"    pm.expect(responseBody.enumerators).to.have.property(\"defaultStatus\");",
							"    pm.expect(responseBody.enumerators.defaultStatus).to.have.property(\"Active\");",
							"    pm.expect(responseBody.enumerators.defaultStatus.Active).to.equal(\"Not Deleted\");",
							"    pm.expect(responseBody).to.have.property(\"apiVersion\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8084/api/config/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8084",
					"path": [
						"api",
						"config",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Partner List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test to check if specific properties exist",
							"pm.test(\"Response should have all required properties\", function () {",
							"    const responseBody = pm.response.json();",
							"    pm.expect(responseBody).to.be.an(\"array\");",
							"    pm.expect(responseBody[0]).to.have.property(\"_id\");",
							"    pm.expect(responseBody[0]).to.have.property(\"name\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8084/api/partner/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8084",
					"path": [
						"api",
						"partner",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Add a Partner",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test to check if specific properties exist",
							"pm.test(\"Response should have all required properties\", function () {",
							"    const responseBody = pm.response.json();",
							"    pm.expect(responseBody).to.have.property(\"_id\");",
							"    pm.expect(responseBody).to.have.property(\"name\");",
							"    pm.expect(responseBody).to.have.property(\"description\");",
							"    pm.expect(responseBody).to.have.property(\"contactDetails\");",
							"    pm.expect(responseBody.contactDetails).to.be.an(\"array\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"Foo\", \"description\":\"Some short description\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8084/api/partner/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8084",
					"path": [
						"api",
						"partner",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Partner 0",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test to check if specific properties exist",
							"pm.test(\"Response should have all required properties\", function () {",
							"    const responseBody = pm.response.json();",
							"    pm.expect(responseBody).to.have.property(\"_id\");",
							"    pm.expect(responseBody).to.have.property(\"name\");",
							"    pm.expect(responseBody).to.have.property(\"status\");",
							"    pm.expect(responseBody).to.have.property(\"description\");",
							"    pm.expect(responseBody).to.have.property(\"contactDetails\");",
							"    pm.expect(responseBody.contactDetails).to.be.an(\"array\");",
							"    pm.expect(responseBody.contactDetails).to.have.lengthOf(2);",
							"    pm.expect(responseBody.contactDetails[0]).to.have.property(\"firstName\");",
							"    pm.expect(responseBody.contactDetails[0]).to.have.property(\"lastName\");",
							"    pm.expect(responseBody.contactDetails[0]).to.have.property(\"phone\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8084/api/partner/bbbb00000000000000000000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8084",
					"path": [
						"api",
						"partner",
						"bbbb00000000000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch Partner Up",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response body as JSON",
							"",
							"// Test to check if specific properties exist",
							"pm.test(\"Response should have all required properties\", function () {",
							"    const responseBody = pm.response.json();",
							"    pm.expect(responseBody).to.have.property(\"name\");",
							"    pm.expect(responseBody).to.have.property(\"description\");",
							"    pm.expect(responseBody.description).to.be.equal(\"Some long description\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"description\":\"Some long description\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8084/api/partner/bbbb00000000000000000000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8084",
					"path": [
						"api",
						"partner",
						"bbbb00000000000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch Partner Down",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response body as JSON",
							"",
							"// Test to check if specific properties exist",
							"pm.test(\"Response should have all required properties\", function () {",
							"    const responseBody = pm.response.json();",
							"    pm.expect(responseBody).to.have.property(\"name\");",
							"    pm.expect(responseBody).to.have.property(\"description\");",
							"    pm.expect(responseBody.description).to.be.equal(\"Back to a short description\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"description\":\"Back to a short description\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8084/api/partner/bbbb00000000000000000000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8084",
					"path": [
						"api",
						"partner",
						"bbbb00000000000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response body as JSON",
							"",
							"// Test to check if specific properties exist",
							"pm.test(\"Response should have all required properties\", function () {",
							"    const responseBody = pm.response.json();",
							"    pm.expect(responseBody).to.have.property(\"firstName\");",
							"    pm.expect(responseBody).to.have.property(\"lastName\");",
							"    pm.expect(responseBody).to.have.property(\"phone\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8084/api/partner/bbbb00000000000000000000/contact/AAAA00000000000000000000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8084",
					"path": [
						"api",
						"partner",
						"bbbb00000000000000000000",
						"contact",
						"AAAA00000000000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Remove Contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response be 200\", function () {",
							"   pm.expect(pm.response.code).to.equal(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8084/api/partner/bbbb00000000000000000000/contact/AAAA00000000000000000000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8084",
					"path": [
						"api",
						"partner",
						"bbbb00000000000000000000",
						"contact",
						"AAAA00000000000000000000"
					]
				}
			},
			"response": []
		}
	]
}