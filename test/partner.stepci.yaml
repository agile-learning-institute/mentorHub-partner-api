version: "1.1"
name: Partner API Check
env:
  host: localhost:8084
config:
  loadTest:
    phases:
      - duration: 5
        arrivalRate: 50
tests:
  observable-config:
    name: Observability - Config
    steps:
      - name: GET Config Values
        http:
          url: http://${{env.host}}/api/config/
          method: GET
          check:
            status: /200/
            schema:
              type: object
              properties:
                configItems:
                  type: array
                versions:
                  type: array
                enumerators:
                  type: object
                apiVersion:
                  type: string
              required:
                - configItems
                - versions
                - enumerators
                - apiVersion
              additionalProperties: false
  observable-health:
    name: Observability - Health
    steps:
      - name: GET Health
        http:
          url: http://${{env.host}}/api/health/
          method: GET
          check:
            status: /200/
  get-people:
    name: Get People
    steps:
      - name: GET a list of people
        http:
          url: http://${{env.host}}/api/people/
          method: GET
          check:
            status: /200/
            schema:
              type: array
              items:
                type: object
                properties:
                  _id:
                    type: string
                  firstName:
                    type: string
                  lastName:
                    type: string
                  phone:
                    type: string
                  eMail:
                    type: string
                required:
                  - _id
                  - firstName
                  - lastName
                  - phone
                  - eMail
                additionalProperties: false
  partner-list:
    name: Get Partners
    steps:
      - name: GET a list of partners
        http:
          url: http://${{env.host}}/api/partner/
          method: GET
          check:
            status: /200/
            schema:
              type: array
              items: 
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                required:
                  - _id
                  - name
                additionalProperties: false
  partner-get:
    name: Get Partner
    steps:
      - name: GET a single partner
        http:
          url: http://${{env.host}}/api/partner/bbbb00000000000000000001
          method: GET
          check:
            status: /200/
            schema:
              type: object
              properties:
                _id:
                  type: string
                name:
                  type: string
                description:
                  type: string
                status:
                  type: string
                url:
                  type: string
                contactDetails:
                  type: array
                  items:
                    type: object
                    properties:
                      _id:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                      phone:
                        type: string
                lastSaved:
                  type: object
                  properties:
                    atTime:
                      type: string
                    byUser:
                      type: string
                    fromIp:
                      type: string
                    correlationId:
                      type: string
                  required:
                    - atTime
                    - byUser
                    - fromIp
                    - correlationId
                  additionalProperties: false
              required:
                - _id
                - name
              additionalProperties: false
  partner-get-notfound:
    name: Get Partner
    steps:
      - name: Try to get an invalid partner
        http:
          url: http://${{env.host}}/api/partner/123456789012345678901234
          method: GET
          check:
            status: /500/
  partner-patch-notfound:
    name: Get Partner
    steps:
      - name: Patch an invalid partner
        http:
          url: http://${{env.host}}/api/partner/123456789012345678901234
          method: Patch
          headers:
            Content-Type: application/json
          json: 
            status: Archived
          check:
            status: /500/
  partner-new:
    name: New Partner
    steps:
      - name: Create a New Partner
        http:
          url: http://${{env.host}}/api/partner/
          method: Post
          headers:
            Content-Type: application/json
          json: 
            name: A test PartnerName
            description: The description
          captures:
            newId:
              jsonpath: $._id            
          check:
            status: /200/
            jsonpath:
              $.name: "A test PartnerName"
              $.description: "The description"
      - name: Archive Partner
        http:
          url: http://${{env.host}}/api/partner/${{captures.newId}}
          method: Patch
          headers:
            Content-Type: application/json
          json: 
            status: Archived
            name: ${{captures.newId}}
          check:
            status: /200/
            jsonpath:
              $.status: Archived
              $.name: ${{captures.newId}}
      - name: Verify Archived
        http:
          url: http://${{env.host}}/api/partner/${{captures.newId}}
          method: GET
          check:
            status: /200/
            jsonpath:
              $.name: ${{captures.newId}}
              $.status: Archived
  contact-add-remove:
    name: Add-Remove Contact
    steps:
      - name: Create a New Partner
        http:
          url: http://${{env.host}}/api/partner/
          method: Post
          headers:
            Content-Type: application/json
          json: 
            name: Add-Remove-Contact
          captures:
            newId:
              jsonpath: $._id
          check:
            status: /200/
            jsonpath:
              $.name: "Add-Remove-Contact"
              $.contactDetails.length: 0
      - name: Add Contact
        http: 
          url: http://${{env.host}}/api/partner/${{captures.newId}}/contact/aaaa00000000000000000000
          method: Post
          check:
            status: /200/
            jsonpath:
              $._id: "aaaa00000000000000000000"
              $.firstName: "James"
              $.lastName: "Smith"
              $.phone: "449-882-6722"
      - name: Verify Contact Added
        http:
          url: http://${{env.host}}/api/partner/${{captures.newId}}
          method: Get
          check:
            status: /200/
            jsonpath:
              $.contactDetails.length: 1
              $.contactDetails[0]._id: "aaaa00000000000000000000"
              $.contactDetails[0].firstName: "James"
              $.contactDetails[0].lastName: "Smith"
              $.contactDetails[0].phone: "449-882-6722"
      - name: Remove Contact
        http:
          url: http://${{env.host}}/api/partner/${{captures.newId}}/contact/aaaa00000000000000000000
          method: Delete
          check:
            status: /200/
      - name: Verify Contact Removed
        http:
          url: http://${{env.host}}/api/partner/${{captures.newId}}
          method: Get
          check:
            status: /200/
            jsonpath:
              $.contactDetails.length: 0
      - name: Archive Partner
        http:
          url: http://${{env.host}}/api/partner/${{captures.newId}}
          method: Patch
          headers:
            Content-Type: application/json
          json: 
            status: Archived
            name: ${{captures.newId}}
          check:
            status: /200/
            jsonpath:
              $.status: Archived
              $.name: ${{captures.newId}}
  contact-add-duplicate:
    name: Add Contact Error-Duplicate
    steps:
      - name: Create a New Partner
        http:
          url: http://${{env.host}}/api/partner/
          method: Post
          headers:
            Content-Type: application/json
          json: 
            name: Add-Remove-Contact
          captures:
            newId:
              jsonpath: $._id
          check:
            status: /200/
            jsonpath:
              $.name: "Add-Remove-Contact"
              $.contactDetails.length: 0
      - name: Add Contact
        http: 
          url: http://${{env.host}}/api/partner/${{captures.newId}}/contact/aaaa00000000000000000000
          method: Post
          check:
            status: /200/
            jsonpath:
              $._id: "aaaa00000000000000000000"
              $.firstName: "James"
              $.lastName: "Smith"
              $.phone: "449-882-6722"
      - name: Verify No-Dup-Contacts
        http: 
          url: http://${{env.host}}/api/partner/${{captures.newId}}/contact/aaaa00000000000000000000
          method: Post
          check:
            status: /500/
      - name: Archive Partner
        http:
          url: http://${{env.host}}/api/partner/${{captures.newId}}
          method: Patch
          headers:
            Content-Type: application/json
          json: 
            status: Archived
            name: ${{captures.newId}}
          check:
            status: /200/
            jsonpath:
              $.status: Archived
              $.name: ${{captures.newId}}
  contact-add-invalid-person:
    name: Add Contact Error-Invalid PersonID
    steps:
      - name: Post Invalid
        http: 
          url: http://${{env.host}}/api/partner/bbbb00000000000000000001/contact/123456789012345678901234
          method: Post
          check:
            status: /500/
  contact-add-invalid-partner:
    name: Add Contact Error-Invalid PartnerID
    steps:
      - name: Post Invalid
        http: 
          url: http://${{env.host}}/api/partner/123456789012345678901234/contact/aaaa00000000000000000000
          method: Post
          check:
            status: /500/
  contact-remove-invalid-notfound:
    name: Remove Contact Error-Not Found
    steps:
      - name: Delete Invalid
        http: 
          url: http://${{env.host}}/api/partner/bbbb00000000000000000001/contact/123456789012345678901234
          method: Post
          check:
            status: /500/
  contact-remove-invalid-partner:
    name: Remove Contact Error-Not Found
    steps:
      - name: Delete Invalid
        http: 
          url: http://${{env.host}}/api/partner/123456789012345678901234/contact/aaaa00000000000000000000
          method: Post
          check:
            status: /500/
